{"version":3,"sources":["novaramedia-shareables.js"],"names":["_classCallCheck","instance","Constructor","TypeError","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","prototype","$","jQuery","Shareables","this","container","$recentPostsSelect","$postUrlInput","postTitleField","postImageField","postTextField","postUrlField","canvas","ShareableCanvas","bind","val","getPostData","setUrlFromSelect","value","_this","on","generateShareable","downloadShareable","_this2","postUrl","undefined","alert","data","action","ajax","url","ShareableVars","ajaxurl","type","success","response","ajaxSuccess","status","console","error","fillData","postData","text","tmp","document","createElement","innerHTML","textContent","innerText","post_title","post_image","stripHTML","post_content","_this3","stage","clear","update","title","image","link","loadedImage","Image","src","onload","event","drawBackground","addImage","addQuote","addTitle","addUrl","addLogo","filename","toSlug","getElementById","href","toDataURL","download","toLowerCase","replace","window","load"],"mappings":"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","file":"novaramedia-shareables.min.js","sourcesContent":["'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/* jshint browser: true, devel: true, indent: 2, curly: true, eqeqeq: true, futurehostile: true, latedef: true, undef: true, unused: true, esversion: 6 */\n\nvar $ = jQuery;\n\nvar Shareables = function () {\n  function Shareables() {\n    _classCallCheck(this, Shareables);\n\n    this.container = $('.shareable-container');\n\n    this.$recentPostsSelect = $('#shareable-post-latest-select');\n    this.$postUrlInput = $('#shareable-post-url');\n\n    this.postTitleField = $('#shareable-post-title');\n    this.postImageField = $('#shareable-post-image');\n    this.postTextField = $('#shareable-post-text');\n    this.postUrlField = $('#shareable-post-url');\n\n    this.canvas = new ShareableCanvas({\n      'container': 'canvas-container'\n    });\n\n    // Bind stuff\n    this.bind();\n\n    if (!!this.postUrlField.val()) {\n      this.getPostData();\n    } else {\n      this.setUrlFromSelect();\n    }\n  }\n\n  _createClass(Shareables, [{\n    key: 'bind',\n    value: function bind() {\n      var _this = this;\n\n      // Latest Posts dropdown\n      this.$recentPostsSelect.on('change', function () {\n        return _this.setUrlFromSelect();\n      });\n\n      // Get data button\n      $('#get-post-data').on('click', function () {\n        return _this.getPostData();\n      });\n\n      // Generate shareable button\n      $('#generate-shareable').on('click', function () {\n        return _this.generateShareable();\n      });\n\n      // Download button\n      $('#download-shareable').on('click', function () {\n        return _this.downloadShareable();\n      });\n    }\n  }, {\n    key: 'setUrlFromSelect',\n    value: function setUrlFromSelect() {\n\n      this.$postUrlInput.val(this.$recentPostsSelect.val());\n      this.getPostData();\n    }\n  }, {\n    key: 'getPostData',\n    value: function getPostData() {\n      var _this2 = this;\n\n      var postUrl = this.$postUrlInput.val();\n\n      if (postUrl === undefined) {\n        return alert('Invalid post ID');\n      }\n\n      var data = {\n        'action': 'get_post_data',\n        'postUrl': postUrl\n      };\n\n      jQuery.ajax({\n        url: ShareableVars.ajaxurl,\n        type: 'get',\n        data: data,\n        success: function success(response) {\n          return _this2.ajaxSuccess(response, status);\n        }\n      });\n    }\n  }, {\n    key: 'ajaxSuccess',\n    value: function ajaxSuccess(response, status) {\n      if (!response) {\n\n        console.error(response.error);\n        alert(response.error);\n      } else if (response.type !== 'success') {\n\n        console.error(response.error);\n        alert(response.error);\n      } else if (response.type === 'success') {\n\n        this.fillData(response.postData);\n        this.generateShareable();\n      }\n    }\n  }, {\n    key: 'stripHTML',\n    value: function stripHTML(text) {\n      var tmp = document.createElement(\"DIV\");\n\n      tmp.innerHTML = text;\n\n      return tmp.textContent || tmp.innerText || \"\";\n    }\n  }, {\n    key: 'fillData',\n    value: function fillData(data) {\n      // Set title\n      this.postTitleField.val(data.post_title);\n\n      // Set image\n      this.postImageField.val(data.post_image);\n\n      // Set text\n      this.postTextField.val(this.stripHTML(data.post_content));\n    }\n  }, {\n    key: 'generateShareable',\n    value: function generateShareable() {\n      var _this3 = this;\n\n      // Clean the canvas\n      this.canvas.stage.clear();\n      this.canvas.update();\n\n      // Get title\n      var title = this.postTitleField.val();\n\n      // Get image\n      var image = this.postImageField.val();\n\n      // Get text\n      var text = this.postTextField.val();\n\n      // Get URL\n      var link = this.postUrlField.val();\n\n      var loadedImage = new Image();\n      loadedImage.src = image;\n\n      loadedImage.onload = function (event) {\n\n        _this3.canvas.drawBackground();\n\n        _this3.canvas.addImage(image);\n\n        _this3.canvas.addQuote(text);\n\n        _this3.canvas.addTitle(title);\n\n        _this3.canvas.addUrl(link);\n\n        _this3.canvas.addLogo();\n      };\n    }\n  }, {\n    key: 'downloadShareable',\n    value: function downloadShareable() {\n      var filename = this.toSlug(this.postTitleField.val()) + '-post-shareable.png';\n      var link = document.getElementById('download-shareable');\n      link.href = this.canvas.canvas.toDataURL();\n      link.download = filename;\n    }\n  }, {\n    key: 'toSlug',\n    value: function toSlug(text) {\n      return text.toLowerCase().replace(/ /g, '-').replace(/[^\\w-]+/g, '');\n    }\n  }]);\n\n  return Shareables;\n}();\n\n;\n\njQuery(window).load(function () {\n  var shareables = new Shareables();\n});"],"sourceRoot":"/source/"}