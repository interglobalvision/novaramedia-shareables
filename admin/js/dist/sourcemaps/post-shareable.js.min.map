{"version":3,"sources":["post-shareable.js"],"names":["_classCallCheck","instance","Constructor","TypeError","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","prototype","$","jQuery","Shareables","this","container","$recentPostsSelect","$postIdInput","$postTitleField","$postImageField","$postTextField","$postUrlField","canvas","ShareableCanvas","bind","val","getPostData","setUrlFromSelect","value","_this","on","generateShareable","downloadShareable","_this2","postID","undefined","alert","data","action","postId","ajax","url","ShareableVars","ajaxurl","type","success","response","ajaxSuccess","status","console","error","fillData","postData","text","tmp","document","createElement","innerHTML","textContent","innerText","post_title","post_image","stripHTML","post_content","post_permalink","_this3","stage","clear","update","title","image","fontSize","addQuotes","is","link","loadedImage","Image","src","crossOrigin","onload","event","drawBackground","addImage","addQuote","addTitle","addUrl","addLogo","filename","toSlug","getElementById","href","toDataURL","download","toLowerCase","replace","window","load"],"mappings":"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","file":"../post-shareable.js","sourcesContent":["'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/* jshint browser: true, devel: true, indent: 2, curly: true, eqeqeq: true, futurehostile: true, latedef: true, undef: true, unused: true, esversion: 6 */\n\nvar $ = jQuery;\n\nvar Shareables = function () {\n  function Shareables() {\n    _classCallCheck(this, Shareables);\n\n    this.container = $('.shareable-container');\n\n    this.$recentPostsSelect = $('#shareable-post-latest-select');\n    this.$postIdInput = $('#shareable-post-id');\n\n    this.$postTitleField = $('#shareable-post-title');\n    this.$postImageField = $('#shareable-post-image');\n    this.$postTextField = $('#shareable-post-text');\n    this.$postUrlField = $('#shareable-post-url');\n\n    this.canvas = new ShareableCanvas({\n      'container': 'canvas-container'\n    });\n\n    // Bind stuff\n    this.bind();\n\n    if (!!this.$postIdInput.val()) {\n      this.getPostData();\n    } else {\n      this.setUrlFromSelect();\n    }\n  }\n\n  _createClass(Shareables, [{\n    key: 'bind',\n    value: function bind() {\n      var _this = this;\n\n      // Latest Posts dropdown\n      this.$recentPostsSelect.on('change', function () {\n        return _this.setUrlFromSelect();\n      });\n\n      // Get data button\n      $('#get-post-data').on('click', function () {\n        return _this.getPostData();\n      });\n\n      // Generate shareable button\n      $('#generate-shareable').on('click', function () {\n        return _this.generateShareable();\n      });\n\n      // Download button\n      $('#download-shareable').on('click', function () {\n        return _this.downloadShareable();\n      });\n    }\n  }, {\n    key: 'setUrlFromSelect',\n    value: function setUrlFromSelect() {\n\n      this.$postIdInput.val(this.$recentPostsSelect.val());\n      this.getPostData();\n    }\n  }, {\n    key: 'getPostData',\n    value: function getPostData() {\n      var _this2 = this;\n\n      var postID = this.$postIdInput.val();\n\n      if (postID === undefined) {\n        return alert('Invalid post ID');\n      }\n\n      var data = {\n        'action': 'get_post_data',\n        'postId': postID\n      };\n\n      jQuery.ajax({\n        url: ShareableVars.ajaxurl,\n        type: 'get',\n        data: data,\n        success: function success(response) {\n          return _this2.ajaxSuccess(response, status);\n        }\n      });\n    }\n  }, {\n    key: 'ajaxSuccess',\n    value: function ajaxSuccess(response, status) {\n      if (!response) {\n\n        console.error(response.error);\n        alert(response.error);\n      } else if (response.type !== 'success') {\n\n        console.error(response.error);\n        alert(response.error);\n      } else if (response.type === 'success') {\n\n        this.fillData(response.postData);\n        this.generateShareable();\n      }\n    }\n  }, {\n    key: 'stripHTML',\n    value: function stripHTML(text) {\n      var tmp = document.createElement(\"DIV\");\n\n      tmp.innerHTML = text;\n\n      return tmp.textContent || tmp.innerText || \"\";\n    }\n  }, {\n    key: 'fillData',\n    value: function fillData(data) {\n      // Set title\n      this.$postTitleField.val(data.post_title);\n\n      // Set image\n      this.$postImageField.val(data.post_image);\n\n      // Set text\n      this.$postTextField.val(this.stripHTML(data.post_content));\n\n      // Set URL\n      this.$postUrlField.val(data.post_permalink);\n    }\n  }, {\n    key: 'generateShareable',\n    value: function generateShareable() {\n      var _this3 = this;\n\n      // Clean the canvas\n      this.canvas.stage.clear();\n      this.canvas.update();\n\n      // Get title\n      var title = this.$postTitleField.val();\n\n      // Get image\n      var image = this.$postImageField.val();\n\n      // Get text\n      var text = this.$postTextField.val();\n\n      // Get font size\n      var fontSize = $('input[name=shareable-font-size]:checked').val();\n\n      // Add quotes?\n      var addQuotes = false;\n\n      if ($('#shareable-checkbox-boolean').is(':checked')) {\n        addQuotes = true;\n      }\n\n      // Get URL\n      var link = this.$postUrlField.val();\n\n      var loadedImage = new Image();\n      loadedImage.src = image;\n      loadedImage.crossOrigin = 'Anonymous';\n\n      loadedImage.onload = function (event) {\n\n        _this3.canvas.drawBackground();\n\n        _this3.canvas.addImage(loadedImage, .3, .5225);\n\n        _this3.canvas.addQuote(text, fontSize, addQuotes);\n\n        _this3.canvas.addTitle(title);\n\n        _this3.canvas.addUrl(link);\n\n        _this3.canvas.addLogo(.11);\n      };\n    }\n  }, {\n    key: 'downloadShareable',\n    value: function downloadShareable() {\n      var filename = this.toSlug(this.$postTitleField.val()) + '-post-shareable.png';\n      var link = document.getElementById('download-shareable');\n      link.href = this.canvas.canvas.toDataURL();\n      link.download = filename;\n    }\n  }, {\n    key: 'toSlug',\n    value: function toSlug(text) {\n      return text.toLowerCase().replace(/ /g, '-').replace(/[^\\w-]+/g, '');\n    }\n  }]);\n\n  return Shareables;\n}();\n\n;\n\njQuery(window).load(function () {\n  var shareables = new Shareables();\n});"]}